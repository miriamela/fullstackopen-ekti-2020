{"ast":null,"code":"var _jsxFileName = \"/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/PatientListPage/index.tsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Container, Table, Button } from \"semantic-ui-react\";\nimport AddPatientModal from \"../AddPatientModal\";\nimport { apiBaseUrl } from \"../constants\";\nimport HealthRatingBar from \"../components/HealthRatingBar\";\nimport { useStateValue } from \"../state\";\n\nconst PatientListPage = () => {\n  const [{\n    patients\n  }, dispatch] = useStateValue();\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [error, setError] = React.useState();\n\n  const openModal = () => setModalOpen(true);\n\n  const closeModal = () => {\n    setModalOpen(false);\n    setError(undefined);\n  };\n\n  const submitNewPatient = async values => {\n    try {\n      const {\n        data: newPatient\n      } = await axios.post(`${apiBaseUrl}/patients`, values);\n      dispatch({\n        type: \"ADD_PATIENT\",\n        payload: newPatient\n      });\n      closeModal();\n    } catch (e) {\n      console.error(e.response.data);\n      setError(e.response.data.error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Patient list\")), /*#__PURE__*/React.createElement(Table, {\n    celled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Gender\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Occupation\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Health Rating\"))), /*#__PURE__*/React.createElement(Table.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, Object.values(patients).map(patient => /*#__PURE__*/React.createElement(Table.Row, {\n    key: patient.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, patient.name), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, patient.gender), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, patient.occupation), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(HealthRatingBar, {\n    showText: false,\n    rating: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(AddPatientModal, {\n    modalOpen: modalOpen,\n    onSubmit: submitNewPatient,\n    error: error,\n    onClose: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => openModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Add New Patient\"));\n};\n\nexport default PatientListPage;","map":{"version":3,"sources":["/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/PatientListPage/index.tsx"],"names":["React","axios","Container","Table","Button","AddPatientModal","apiBaseUrl","HealthRatingBar","useStateValue","PatientListPage","patients","dispatch","modalOpen","setModalOpen","useState","error","setError","openModal","closeModal","undefined","submitNewPatient","values","data","newPatient","post","type","payload","e","console","response","Object","map","patient","id","name","gender","occupation"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Container, Table, Button } from \"semantic-ui-react\";\n\nimport { PatientFormValues } from \"../AddPatientModal/AddPatientForm\";\nimport AddPatientModal from \"../AddPatientModal\";\nimport { Patient } from \"../types\";\nimport { apiBaseUrl } from \"../constants\";\nimport HealthRatingBar from \"../components/HealthRatingBar\";\nimport { useStateValue } from \"../state\";\n\nconst PatientListPage: React.FC = () => {\n  const [{ patients }, dispatch] = useStateValue();\n\n  const [modalOpen, setModalOpen] = React.useState<boolean>(false);\n  const [error, setError] = React.useState<string | undefined>();\n\n  const openModal = (): void => setModalOpen(true);\n\n  const closeModal = (): void => {\n    setModalOpen(false);\n    setError(undefined);\n  };\n\n  const submitNewPatient = async (values: PatientFormValues) => {\n    try {\n      const { data: newPatient } = await axios.post<Patient>(\n        `${apiBaseUrl}/patients`,\n        values\n      );\n      dispatch({ type: \"ADD_PATIENT\", payload: newPatient });\n      closeModal();\n    } catch (e) {\n      console.error(e.response.data);\n      setError(e.response.data.error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Container textAlign=\"center\">\n        <h3>Patient list</h3>\n      </Container>\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Gender</Table.HeaderCell>\n            <Table.HeaderCell>Occupation</Table.HeaderCell>\n            <Table.HeaderCell>Health Rating</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {Object.values(patients).map((patient: Patient) => (\n            <Table.Row key={patient.id}>\n              <Table.Cell>{patient.name}</Table.Cell>\n              <Table.Cell>{patient.gender}</Table.Cell>\n              <Table.Cell>{patient.occupation}</Table.Cell>\n              <Table.Cell>\n                <HealthRatingBar showText={false} rating={1} />\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n      <AddPatientModal\n        modalOpen={modalOpen}\n        onSubmit={submitNewPatient}\n        error={error}\n        onClose={closeModal}\n      />\n      <Button onClick={() => openModal()}>Add New Patient</Button>\n    </div>\n  );\n};\n\nexport default PatientListPage;\n"]},"metadata":{},"sourceType":"module"}