{"ast":null,"code":"var _jsxFileName = \"/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/HospitalModal/AddHospitalForm.tsx\";\nimport React from \"react\";\nimport { Field, Formik, Form } from \"formik\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport { TextField, DiagnosisSelection } from \"../AddPatientModal/FormField\";\nimport { useStateValue } from \"../state\";\n\nconst AddHospitalForm = ({\n  onSubmit,\n  closeModal\n}) => {\n  const [{\n    diagnoses\n  }] = useStateValue();\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      description: \"\",\n      date: \"\",\n      specialist: \"\",\n      diagnosisCodes: [],\n      type: \"Hospital\",\n      discharge: {\n        date: \"\",\n        criteria: \"\"\n      }\n    },\n    onSubmit: onSubmit,\n    validate: values => {\n      const requiredErrors = \"Field is required\";\n      const errors = {};\n\n      if (!values.description) {\n        errors.description = requiredErrors;\n      }\n\n      if (!values.date) {\n        errors.date = requiredErrors;\n      }\n\n      if (!values.specialist) {\n        errors.specialist = requiredErrors;\n      }\n\n      if (!values.discharge.date) {\n        errors.discharge = requiredErrors;\n      }\n\n      if (!values.discharge.criteria) {\n        errors.discharge = requiredErrors;\n      }\n\n      return errors;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, ({\n    isValid,\n    dirty,\n    setFieldValue,\n    setFieldTouched\n  }) => {\n    return /*#__PURE__*/React.createElement(Form, {\n      className: \"form ui\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Specialist\",\n      placeholder: \"SPECIALIST\",\n      name: \"specialist\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"Date\",\n      placeholder: \"YYYY-MM-DD\",\n      name: \"date\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"Description\",\n      placeholder: \"DESCRIPTION\",\n      name: \"description\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(DiagnosisSelection, {\n      setFieldValue: setFieldValue,\n      setFieldTouched: setFieldTouched,\n      diagnoses: Object.values(diagnoses),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"Discharge Date\",\n      placeholder: \"YYYY-MM-DD\",\n      name: \"discharge.date\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"Criteria\",\n      placeholder: \"CRITERIA\",\n      name: \"discharge.criteria\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      floated: \"left\",\n      width: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      onClick: closeModal,\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, \"Cancel\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      floated: \"right\",\n      width: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      floated: \"right\",\n      color: \"green\",\n      disabled: !dirty || !isValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }, \"Add\"))));\n  });\n};\n\nexport default AddHospitalForm;","map":{"version":3,"sources":["/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/HospitalModal/AddHospitalForm.tsx"],"names":["React","Field","Formik","Form","Grid","Button","TextField","DiagnosisSelection","useStateValue","AddHospitalForm","onSubmit","closeModal","diagnoses","description","date","specialist","diagnosisCodes","type","discharge","criteria","values","requiredErrors","errors","isValid","dirty","setFieldValue","setFieldTouched","Object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {HospitalFormEntries} from \"./index\";\nimport {Field, Formik, Form} from \"formik\";\nimport {Grid, Button} from \"semantic-ui-react\";\nimport {TextField, DiagnosisSelection} from \"../AddPatientModal/FormField\";\nimport {useStateValue} from \"../state\";\n\ninterface Props{\n    onSubmit: (values:HospitalFormEntries )=>void;\n    closeModal:()=>void\n}\n\nconst AddHospitalForm:React.FC<Props>=({onSubmit, closeModal})=>{\n    const [{diagnoses}] =useStateValue()\n    return(\n        <Formik initialValues={{\n            description: \"\",\n            date: \"\",\n            specialist: \"\",\n            diagnosisCodes: [],\n            type: \"Hospital\",\n            discharge:{\n                date: \"\",\n                criteria: \"\"\n            }\n        }}\n        onSubmit={onSubmit}\n        validate={\n            values=>{\n                const requiredErrors =\"Field is required\";\n                const errors :{[field:string]:string}={}\n                if(!values.description){\n                    errors.description = requiredErrors\n                }\n                if(!values.date){\n                    errors.date = requiredErrors\n                }\n                if(!values.specialist){\n                    errors.specialist =requiredErrors\n                }\n                if(!values.discharge.date){\n                    errors.discharge= requiredErrors\n                }\n                if(!values.discharge.criteria){\n                    errors.discharge =requiredErrors\n                }\n                return errors\n            }}>\n            {\n                ({isValid, dirty, setFieldValue, setFieldTouched})=>{\n                    return(\n                        <Form className=\"form ui\">\n                            <Field\n                            label=\"Specialist\"\n                            placeholder=\"SPECIALIST\"\n                            name=\"specialist\"\n                            component={TextField}\n                            />\n                            <Field\n                            label=\"Date\"\n                            placeholder=\"YYYY-MM-DD\"\n                            name=\"date\"\n                            component={TextField}\n                            />\n                            <Field\n                            label=\"Description\"\n                            placeholder= \"DESCRIPTION\"\n                            name=\"description\"\n                            component={TextField}\n                            />\n                             <DiagnosisSelection\n                            setFieldValue={setFieldValue}\n                            setFieldTouched={setFieldTouched}\n                            diagnoses={Object.values(diagnoses)}\n                            />\n                             <Field\n                            label=\"Discharge Date\"\n                            placeholder= \"YYYY-MM-DD\"\n                            name=\"discharge.date\"\n                            component={TextField}\n                            />\n                             <Field\n                            label=\"Criteria\"\n                            placeholder= \"CRITERIA\"\n                            name=\"discharge.criteria\"\n                            component={TextField}\n                            />\n                             <Grid>\n                                <Grid.Column floated=\"left\" width={5}>\n                                    <Button type=\"button\" onClick={closeModal} color=\"red\">Cancel</Button>\n                                </Grid.Column>\n                                <Grid.Column floated=\"right\" width={5}>\n                                    <Button type=\"submit\" floated=\"right\" color=\"green\" disabled={!dirty|| !isValid}>\n                                        Add\n                                    </Button>\n                                </Grid.Column>\n                            </Grid>\n                        </Form>\n                    )\n                }\n            }\n\n        </Formik>\n        \n    )\n}\n\nexport default AddHospitalForm;\n"]},"metadata":{},"sourceType":"module"}