{"ast":null,"code":"var _jsxFileName = \"/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/components/HealthCheckDisplay.tsx\";\nimport React from \"react\";\nimport { Icon, Segment } from \"semantic-ui-react\";\n\nconst HealthCheckDisplay = ({\n  entry,\n  iconType\n}) => {\n  // console.log(entry)\n  const getIconRating = rating => {\n    if (rating === 0) {\n      return \"green\";\n    } else if (rating === 1) {\n      return \"yellow\";\n    } else if (rating === 2) {\n      return \"\";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Segment, {\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, entry.date, \", \", /*#__PURE__*/React.createElement(Icon, {\n    className: iconType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, entry.description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, entry.healthCheckRating));\n};\n\nexport default HealthCheckDisplay;","map":{"version":3,"sources":["/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/components/HealthCheckDisplay.tsx"],"names":["React","Icon","Segment","HealthCheckDisplay","entry","iconType","getIconRating","rating","date","description","healthCheckRating"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,IAAR,EAAcC,OAAd,QAA4B,mBAA5B;;AAEA,MAAMC,kBAAwE,GAAC,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAChG;AAEJ,QAAMC,aAAa,GAAGC,MAAD,IAAwB;AACzC,QAAGA,MAAM,KAAI,CAAb,EAAe;AACX,aAAO,OAAP;AACH,KAFD,MAGK,IAAGA,MAAM,KAAK,CAAd,EAAgB;AACjB,aAAO,QAAP;AACH,KAFI,MAGA,IAAGA,MAAM,KAAI,CAAb,EAAe;AAChB,aAAO,EAAP;AACH;AACJ,GAVD;;AAWI,sBACI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAACI,IAAX,qBAAkB,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEH,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACK,WAAV,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAK,CAACM,iBAAV,CAHJ,CADJ;AAOH,CArBD;;AAuBA,eAAeP,kBAAf","sourcesContent":["import React from \"react\";\nimport {HealthCheckEntry} from \"../types\";\nimport {Icon, Segment} from \"semantic-ui-react\";\n\nconst HealthCheckDisplay: React.FC<({entry: HealthCheckEntry, iconType: any})>=({entry, iconType})=>{\n    // console.log(entry)\n\nconst getIconRating =(rating:number):string=>{\n    if(rating=== 0){\n        return \"green\"\n    }\n    else if(rating === 1){\n        return \"yellow\"\n    }\n    else if(rating ===2){\n        return \"\"\n    }\n}\n    return(\n        <Segment color=\"blue\">\n            <h3>{entry.date}, <Icon className={iconType}/></h3>\n            <p>{entry.description}</p>\n            <p>{entry.healthCheckRating}</p>\n        </Segment>\n    )\n}\n\nexport default HealthCheckDisplay;"]},"metadata":{},"sourceType":"module"}