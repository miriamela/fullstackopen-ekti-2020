{"ast":null,"code":"var _jsxFileName = \"/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/PatientPage/index.tsx\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useStateValue } from \"../state/state\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { apiBaseUrl } from \"../constants\";\nimport { Icon, Button } from \"semantic-ui-react\";\nimport { setOnePatientInfo, updatePatientInfo } from \"../state/reducer\";\nimport EntryDetails from \"../components/EntryDetails\";\nimport AddHealthCheckModal from \"../AddHealthCheckModal\";\nimport AddOccupationalHealthcareModal from \"../AddOccupationalHealthcareModal\";\n\nconst PatientPage = () => {\n  const id = useParams();\n  const [patient, setPatient] = useState();\n  const [, dispatch] = useStateValue();\n  const [modalOpenHealthCheck, setModalOpenHealthCheck] = React.useState(false);\n  const [modalOpenOccupational, setModalOpenOccupational] = React.useState(false);\n  const [modalOpen];\n  const [error, setError] = React.useState(); // console.log(id)\n\n  const openModalHealthCheck = () => {\n    setModalOpenHealthCheck(true);\n  };\n\n  const openModalOccupational = () => {\n    setModalOpenOccupational(true);\n  };\n\n  const closeModal = () => {\n    setModalOpenHealthCheck(false);\n    setModalOpenOccupational(false);\n    setError(undefined);\n  };\n\n  const addingEntries = async values => {\n    try {\n      const {\n        data: patientWithEntries\n      } = await axios.post(`${apiBaseUrl}/patients/${id.id}/entries`, values);\n      dispatch(updatePatientInfo(patientWithEntries));\n      closeModal();\n    } catch (e) {\n      console.log(e);\n      setError(e.response.data.error);\n    }\n\n    try {\n      const {\n        data: patient\n      } = await axios.get(`${apiBaseUrl}/patients/${id.id}`);\n      setPatient(patient);\n      dispatch(setOnePatientInfo(patient));\n    } catch (e) {\n      console.error(e.response.data);\n      setError(e.response.data.error);\n    }\n  };\n\n  React.useEffect(() => {\n    const fetchPatient = async () => {\n      try {\n        const {\n          data: patient\n        } = await axios.get(`${apiBaseUrl}/patients/${id.id}`);\n        setPatient(patient);\n        dispatch(setOnePatientInfo(patient));\n      } catch (e) {\n        console.log(e);\n        setError(e.response.data.error);\n      }\n    };\n\n    fetchPatient();\n  }, [dispatch, id.id]); // console.log(patient);\n\n  const showIcon = gender => {\n    if (gender === \"male\") {\n      return \"mars\";\n    } else if (gender === \"female\") {\n      return \"venus\";\n    } else {\n      return \"genderless\";\n    }\n  };\n\n  if (!patient) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }\n  }, patient.name, \" \", /*#__PURE__*/React.createElement(Icon, {\n    className: showIcon(patient.gender),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }\n  }, \"ssn: \", patient.ssn), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }\n  }, \"occupation: \", patient.occupation)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Entries\"), patient.entries.map(each => /*#__PURE__*/React.createElement(EntryDetails, {\n    key: each.id,\n    entry: each,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 43\n    }\n  }))), /*#__PURE__*/React.createElement(AddHealthCheckModal, {\n    error: error,\n    modalOpen: modalOpenHealthCheck,\n    closeModal: closeModal,\n    onSubmit: addingEntries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AddOccupationalHealthcareModal, {\n    error: error,\n    modalOpen: modalOpenOccupational,\n    closeModal: closeModal,\n    onSubmit: addingEntries,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui hidden divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"ui primary button\",\n    onClick: () => openModalHealthCheck(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Add Health Check Information\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui hidden divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => openModalOccupational(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Add Occupational Healthcare Information\"));\n};\n\nexport default PatientPage;","map":{"version":3,"sources":["/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/PatientPage/index.tsx"],"names":["React","useParams","useStateValue","useState","axios","apiBaseUrl","Icon","Button","setOnePatientInfo","updatePatientInfo","EntryDetails","AddHealthCheckModal","AddOccupationalHealthcareModal","PatientPage","id","patient","setPatient","dispatch","modalOpenHealthCheck","setModalOpenHealthCheck","modalOpenOccupational","setModalOpenOccupational","modalOpen","error","setError","openModalHealthCheck","openModalOccupational","closeModal","undefined","addingEntries","values","data","patientWithEntries","post","e","console","log","response","get","useEffect","fetchPatient","showIcon","gender","name","ssn","occupation","entries","map","each"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {useStateValue} from \"../state/state\";\nimport {useState} from \"react\";\nimport {Patient, Entry} from \"../types\";\nimport axios from \"axios\";\nimport {apiBaseUrl} from \"../constants\";\nimport {Icon,Button} from \"semantic-ui-react\";\nimport {setOnePatientInfo, updatePatientInfo} from \"../state/reducer\";\nimport EntryDetails from \"../components/EntryDetails\";\nimport AddHealthCheckModal, {HealthCheckFormEntries}  from \"../AddHealthCheckModal\";\nimport AddOccupationalHealthcareModal, {OccupationalHealthcareFormEntries} from \"../AddOccupationalHealthcareModal\"\n\ntype DataFromEntries =Omit<Entry, \"id\">\n\nconst PatientPage: React.FC=()=>{\n    const id=useParams<{id:string}>();\n    const [patient, setPatient]=useState<Patient|undefined>();\n    const [, dispatch] = useStateValue();\n    const [modalOpenHealthCheck, setModalOpenHealthCheck] =React.useState<boolean>(false)\n    const [modalOpenOccupational, setModalOpenOccupational]=React.useState<boolean>(false)\n    const [modalOpen]\n    const [error, setError] = React.useState<string | undefined>();\n\n    // console.log(id)\n   const openModalHealthCheck=(): void=>{\n       setModalOpenHealthCheck(true)\n   }\n   const openModalOccupational=()=>{\n       setModalOpenOccupational(true)\n   }\n   const closeModal=():void=>{\n       setModalOpenHealthCheck(false)\n       setModalOpenOccupational(false)\n       setError(undefined)\n   }\n\n   const addingEntries=async(values: DataFromEntries)=>{\n    try{\n    const {data: patientWithEntries} = await axios.post(\n        `${apiBaseUrl}/patients/${id.id}/entries`,\n        values,\n            );\n    dispatch(updatePatientInfo(patientWithEntries))\n    closeModal()\n        }catch (e){\n    console.log(e)\n    setError(e.response.data.error)\n        }\n        try{\n            const {data: patient} = await axios.get<Patient>(`${apiBaseUrl}/patients/${id.id}`)\n                setPatient(patient);\n                dispatch(setOnePatientInfo(patient))\n        }catch(e){\n            console.error(e.response.data)\n            setError(e.response.data.error)\n        }\n        }\n\n    React.useEffect(() => {\n        const fetchPatient = async()=>{\n            try{\n                const {data: patient} = await axios.get<Patient>(`${apiBaseUrl}/patients/${id.id}`)\n                setPatient(patient);\n                dispatch(setOnePatientInfo(patient))\n            }catch(e){\n                console.log(e)\n                setError(e.response.data.error)\n            } \n        }\n       fetchPatient()\n    }, [dispatch, id.id])\n  \n    // console.log(patient);\n   const showIcon = (gender: string): \"mars\"| \"venus\"|\"genderless\"=>{\n    if (gender===\"male\"){\n        return \"mars\"\n    }\n    else if(gender=== \"female\"){\n        return \"venus\"\n    }else{\n        return \"genderless\"\n    }\n    }\n    \n    if(!patient){\n        return null\n    }\n    return(\n        <>\n        <div>\n           <h2>{patient.name} <Icon className={showIcon(patient.gender)}/></h2>\n           <p>ssn: {patient.ssn}</p>\n           <p>occupation: {patient.occupation}</p>\n        </div>\n        <br/>\n        <div>\n            <h2>Entries</h2>\n            {\n                patient.entries.map(each=><EntryDetails key={each.id} entry={each}/>)\n            }         \n        </div>\n        <AddHealthCheckModal error={error} modalOpen={modalOpenHealthCheck} closeModal={closeModal} onSubmit={addingEntries}/>\n        <AddOccupationalHealthcareModal error={error} modalOpen={modalOpenOccupational} closeModal={closeModal} onSubmit={addingEntries}/>\n        <div className=\"ui hidden divider\"></div>\n        <Button className=\"ui primary button\" onClick={()=>openModalHealthCheck()}>Add Health Check Information</Button>\n        <div className=\"ui hidden divider\"></div>\n        <Button onClick={()=>openModalOccupational()}>Add Occupational Healthcare Information</Button>\n        </>\n    )\n}\nexport default PatientPage"]},"metadata":{},"sourceType":"module"}