{"ast":null,"code":"var _jsxFileName = \"/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/PatientPage/index.tsx\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useStateValue } from \"../state/state\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { apiBaseUrl } from \"../constants\";\nimport { Icon } from \"semantic-ui-react\";\nimport { setOnePatientInfo } from \"../state/reducer\";\nimport { importAllDiagnosis } from \"../state/reducer\";\n\nconst PatientPage = () => {\n  const id = useParams();\n  const [patient, setPatient] = useState();\n  const [, dispatch] = useStateValue();\n  const [{\n    diagnoses\n  }] = useStateValue(); // console.log(diagnoses[\"F43.2\"].name) \n\n  React.useEffect(() => {\n    const fetchPatient = async () => {\n      try {\n        const {\n          data: patient\n        } = await axios.get(`${apiBaseUrl}/patients/${id.id}`);\n        setPatient(patient);\n        dispatch(setOnePatientInfo(patient)); // {type: \"UPDATE_PATIENT\", payload: patient})\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchPatient();\n  }, [dispatch, id.id]);\n  React.useEffect(() => {\n    const fetchDiagnosis = async () => {\n      try {\n        const {\n          data: diagnosesListFromApi\n        } = await axios.get(`${apiBaseUrl}/diagnoses`);\n        dispatch(importAllDiagnosis(diagnosesListFromApi));\n        console.log(diagnosesListFromApi);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchDiagnosis();\n  }, [dispatch]);\n  console.log(patient); //    I have still no idea how to use typescript\n\n  const showIcon = gender => {\n    if (gender === \"male\") {\n      return \"mars\";\n    } else if (gender === \"female\") {\n      return \"venus\";\n    } else {\n      return \"genderless\";\n    }\n  };\n\n  if (!patient) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }\n  }, patient.name, \" \", /*#__PURE__*/React.createElement(Icon, {\n    className: showIcon(patient.gender),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }\n  }, \"ssn: \", patient.ssn), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }\n  }, \"occupation: \", patient.occupation)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"entries\"), patient.entries.length > 0 ? patient.entries.map(each => /*#__PURE__*/React.createElement(\"div\", {\n    key: each.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, each.description), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, each.diagnosisCodes ? each.diagnosisCodes.map(each => /*#__PURE__*/React.createElement(\"li\", {\n    key: each,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, each, \", \", diagnoses[each].name)) : null))) : null));\n};\n\nexport default PatientPage;","map":{"version":3,"sources":["/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/PatientPage/index.tsx"],"names":["React","useParams","useStateValue","useState","axios","apiBaseUrl","Icon","setOnePatientInfo","importAllDiagnosis","PatientPage","id","patient","setPatient","dispatch","diagnoses","useEffect","fetchPatient","data","get","e","console","log","fetchDiagnosis","diagnosesListFromApi","showIcon","gender","name","ssn","occupation","entries","length","map","each","description","diagnosisCodes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {useStateValue} from \"../state/state\";\nimport {useState} from \"react\";\nimport {Patient, Diagnoses} from \"../types\";\nimport axios from \"axios\";\nimport {apiBaseUrl} from \"../constants\";\nimport {Icon} from \"semantic-ui-react\";\nimport {setOnePatientInfo} from \"../state/reducer\";\nimport {importAllDiagnosis} from \"../state/reducer\";\n\n\nconst PatientPage: React.FC=()=>{\n    const id=useParams<{id: string}>();\n    const [patient, setPatient]=useState<Patient|undefined>();\n    const [, dispatch] = useStateValue();\n    const [{diagnoses}] = useStateValue();\n    \n\n   \n    // console.log(diagnoses[\"F43.2\"].name) \n\n    React.useEffect(() => {\n        const fetchPatient = async()=>{\n            try{\n                const {data: patient} = await axios.get<Patient>(`${apiBaseUrl}/patients/${id.id}`)\n                setPatient(patient);\n                dispatch(setOnePatientInfo(patient))\n                    // {type: \"UPDATE_PATIENT\", payload: patient})\n            }catch(e){\n                console.log(e)\n            } \n        }\n       fetchPatient()\n    }, [dispatch, id.id])\n    React.useEffect(() => {\n        const fetchDiagnosis =async ()=>{\n            try{\n                const {data: diagnosesListFromApi} = await axios.get<Diagnoses[]>( `${apiBaseUrl}/diagnoses`)\n                dispatch(importAllDiagnosis(diagnosesListFromApi))\n                console.log(diagnosesListFromApi)\n            }catch(e){\n              console.log(e)\n            }\n        }\n        fetchDiagnosis();\n    }, [dispatch])\n\n\n    console.log(patient);\n  \n//    I have still no idea how to use typescript\n   const showIcon = (gender: string): \"mars\"| \"venus\"|\"genderless\"=>{\n    if (gender===\"male\"){\n        return \"mars\"\n    }\n    else if(gender=== \"female\"){\n        return \"venus\"\n    }else{\n        return \"genderless\"\n    }\n    }\n    \n    if(!patient){\n        return null\n    }\n    return(\n        <>\n        <div>\n           <h2>{patient.name} <Icon className={showIcon(patient.gender)}/></h2>\n           <p>ssn: {patient.ssn}</p>\n           <p>occupation: {patient.occupation}</p>\n        </div>\n        <div>\n            <h2>entries</h2>\n            {\n                patient.entries.length>0? \n                patient.entries.map(each=>(\n                    <div key={each.id}>\n                    <p>{each.description}</p>\n                    <ul> \n                        {\n                        each.diagnosisCodes? each.diagnosisCodes.map(each=>(\n                        <li key={each}>{each}, {diagnoses[each].name}</li>)) : null\n                        }\n                    </ul>\n                    </div>\n                )): null\n            }\n        </div>\n        </>\n    )\n}\nexport default PatientPage"]},"metadata":{},"sourceType":"module"}