{"ast":null,"code":"var _jsxFileName = \"/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/components/HospitalDisplay.tsx\";\nimport React from \"react\";\nimport { useStateValue } from \"../state/state\";\n\nconst HospitalDisplay = ({\n  entry\n}) => {\n  const [{\n    diagnoses\n  }] = useStateValue(); // console.log(entry)\n\n  if (!diagnoses || entry.diagnosisCodes === undefined) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, entry.date, \", \", entry.type), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, entry.description), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Diagnoses:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, entry.diagnosisCodes.length > 0 ? entry.diagnosisCodes.map(each => /*#__PURE__*/React.createElement(\"li\", {\n    key: each,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }\n  }, entry.diagnosisCodes, \": \", diagnoses[each].name, \" \")) : null), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Discharged: \", entry.discharge.date), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, entry.discharge.criteria));\n};\n\nexport default HospitalDisplay;","map":{"version":3,"sources":["/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/components/HospitalDisplay.tsx"],"names":["React","useStateValue","HospitalDisplay","entry","diagnoses","diagnosisCodes","undefined","date","type","description","length","map","each","name","discharge","criteria"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,aAAR,QAA4B,gBAA5B;;AAEA,MAAMC,eAAgD,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AAC9D,QAAM,CAAC;AAACC,IAAAA;AAAD,GAAD,IAAeH,aAAa,EAAlC,CAD8D,CAE9D;;AACA,MAAG,CAACG,SAAD,IAAaD,KAAK,CAACE,cAAN,KAAwBC,SAAxC,EAAmD;AAC/C,WAAO,IAAP;AACH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAACI,IAAX,QAAmBJ,KAAK,CAACK,IAAzB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAK,CAACM,WAAV,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQN,KAAK,CAACE,cAAN,CAAqBK,MAArB,GAA4B,CAA5B,GAA+BP,KAAK,CAACE,cAAN,CAAqBM,GAArB,CAAyBC,IAAI,iBACxD;AAAI,IAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBT,KAAK,CAACE,cAAtB,QAAwCD,SAAS,CAACQ,IAAD,CAAT,CAAgBC,IAAxD,MAD2B,CAA/B,GAEM,IAJd,CAJJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiBV,KAAK,CAACW,SAAN,CAAgBP,IAAjC,CAZJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,KAAK,CAACW,SAAN,CAAgBC,QAApB,CAbJ,CADJ;AAiBH,CAvBD;;AAwBA,eAAeb,eAAf","sourcesContent":["import React from \"react\";\nimport {HospitalEntry} from \"../types\";\nimport {useStateValue} from \"../state/state\";\n\nconst HospitalDisplay: React.FC<{entry:HospitalEntry}>=({entry})=>{\n    const [{diagnoses}] =useStateValue()\n    // console.log(entry)\n    if(!diagnoses ||entry.diagnosisCodes ===undefined ){\n        return null\n    }\n    return(\n        <section>\n            <h3>{entry.date}, {entry.type}</h3>\n            <p>{entry.description}</p>\n            <h4>Diagnoses:</h4>\n            <ul>\n                {\n                    entry.diagnosisCodes.length>0? entry.diagnosisCodes.map(each=>\n                        <li key={each}>{entry.diagnosisCodes}: {diagnoses[each].name} </li>\n                        ):null\n                }\n               \n            </ul>\n            <h4>Discharged: {entry.discharge.date}</h4>\n            <p>{entry.discharge.criteria}</p> \n        </section>\n    )\n}\nexport default HospitalDisplay;"]},"metadata":{},"sourceType":"module"}