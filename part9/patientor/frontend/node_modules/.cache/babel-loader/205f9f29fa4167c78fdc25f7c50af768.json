{"ast":null,"code":"var _jsxFileName = \"/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/AddOccupationalHealthcareModal/AddOccupationalHealthcareForm.tsx\";\nimport React from \"react\";\nimport { Field, Formik, Form } from \"formik\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport { useStateValue } from \"../state\";\nimport { TextField, DiagnosisSelection } from \"../AddPatientModal/FormField\";\n\nconst AddOccupationalHealthcareForm = ({\n  onSubmit,\n  closeModal\n}) => {\n  const [{\n    diagnoses\n  }] = useStateValue();\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      description: \"\",\n      date: \"\",\n      specialist: \"\",\n      diagnosisCodes: [],\n      type: \"OccupationalHealthcare\",\n      employerName: \"\",\n      sickLeave: {\n        startDate: \"\",\n        endDate: \"\"\n      }\n    },\n    onSubmit: onSubmit,\n    validate: values => {\n      const requiredError = \"Field is required\";\n      const errors = {};\n\n      if (!values.description) {\n        errors.name = requiredError;\n      }\n\n      if (!values.date) {\n        errors.date = requiredError;\n      }\n\n      if (values.specialist) {\n        errors.specialist = requiredError;\n      }\n\n      if (!values.employerName) {\n        errors.employerName = requiredError;\n      }\n\n      return errors;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, ({\n    isValid,\n    dirty,\n    setFieldValue,\n    setFieldTouched\n  }) => {\n    return /*#__PURE__*/React.createElement(Form, {\n      className: \"form ui\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"specialist\",\n      placeholder: \"SPECIALIST\",\n      name: \"specialist\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"date\",\n      placeholder: \"YYYY-MM-DD\",\n      name: \"date\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"description\",\n      placeholder: \"DESCRIPTION\",\n      name: \"description\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(DiagnosisSelection, {\n      setFieldValue: setFieldValue,\n      setFieldTouched: setFieldTouched,\n      diagnoses: Object.values(diagnoses),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"Sick Leave Start Date\",\n      placeholder: \"YYYY-MM-DD\",\n      name: \"startDate\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"Sick Leave End Date\",\n      placeholder: \"YYYY-MM-DD\",\n      name: \"endDate\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      floated: \"left\",\n      width: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      onClick: closeModal,\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, \"Cancel\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      floated: \"right\",\n      width: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      floated: \"right\",\n      color: \"green\",\n      disabled: !dirty || !isValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 37\n      }\n    }, \"Add\"))));\n  });\n};\n\nexport default AddOccupationalHealthcareForm;","map":{"version":3,"sources":["/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/AddOccupationalHealthcareModal/AddOccupationalHealthcareForm.tsx"],"names":["React","Field","Formik","Form","Grid","Button","useStateValue","TextField","DiagnosisSelection","AddOccupationalHealthcareForm","onSubmit","closeModal","diagnoses","description","date","specialist","diagnosisCodes","type","employerName","sickLeave","startDate","endDate","values","requiredError","errors","name","isValid","dirty","setFieldValue","setFieldTouched","Object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {OccupationalHealthcareFormEntries} from \"./index\";\nimport {Field, Formik, Form} from \"formik\";\nimport {Grid, Button} from \"semantic-ui-react\";\nimport {useStateValue} from \"../state\";\nimport {TextField,DiagnosisSelection } from \"../AddPatientModal/FormField\";\n\ninterface Props{\n    onSubmit:(values:OccupationalHealthcareFormEntries )=>void;\n    closeModal:()=>void\n}\n\nconst AddOccupationalHealthcareForm: React.FC<Props>=({onSubmit, closeModal})=>{\n    const [{diagnoses}]=useStateValue()\n    return(\n        <Formik initialValues={{\n            description: \"\",\n            date: \"\",\n            specialist:\"\",\n            diagnosisCodes: [],\n            type: \"OccupationalHealthcare\",\n            employerName: \"\",\n            sickLeave:{\n                startDate:\"\",\n                endDate:\"\"\n            }\n        }}\n        onSubmit={onSubmit}\n        validate={\n            values=>{\n                const requiredError=\"Field is required\";\n                const errors: {[field:string]:string}={}\n                if(!values.description){\n                    errors.name=requiredError\n                }\n                if(!values.date){\n                    errors.date=requiredError\n                }\n                if(values.specialist){\n                    errors.specialist=requiredError\n                }\n                if(!values.employerName){\n                    errors.employerName =requiredError\n                }\n                return errors\n            }}>\n            {\n                ({isValid, dirty, setFieldValue,setFieldTouched})=>{\n                    return (\n                        <Form className=\"form ui\">\n                             <Field\n                            label=\"specialist\"\n                            placeholder=\"SPECIALIST\"\n                            name=\"specialist\"\n                            component={TextField}\n                            />\n                            <Field\n                            label=\"date\"\n                            placeholder=\"YYYY-MM-DD\"\n                            name=\"date\"\n                            component={TextField}\n                            />\n                            <Field\n                            label=\"description\"\n                            placeholder= \"DESCRIPTION\"\n                            name=\"description\"\n                            component={TextField}\n                            />\n                            <DiagnosisSelection\n                            setFieldValue={setFieldValue}\n                            setFieldTouched={setFieldTouched}\n                            diagnoses={Object.values(diagnoses)}\n                            />\n                            <Field\n                            label=\"Sick Leave Start Date\"\n                            placeholder=\"YYYY-MM-DD\"\n                            name=\"startDate\"\n                            component={TextField}\n                            />\n                            <Field\n                            label=\"Sick Leave End Date\"\n                            placeholder=\"YYYY-MM-DD\"\n                            name=\"endDate\"\n                            component={TextField}\n                            />\n                            <Grid>\n                                <Grid.Column floated=\"left\" width={5}>\n                                    <Button type=\"button\" onClick={closeModal} color=\"red\">Cancel</Button>\n                                </Grid.Column>\n                                <Grid.Column floated=\"right\" width={5}>\n                                    <Button type=\"submit\" floated=\"right\" color=\"green\" disabled={!dirty|| !isValid}>\n                                        Add\n                                    </Button>\n                                </Grid.Column>\n                            </Grid>\n                        </Form>\n                    )\n                }\n            }    \n\n        </Formik>\n    )\n}\n\nexport default AddOccupationalHealthcareForm;\n"]},"metadata":{},"sourceType":"module"}