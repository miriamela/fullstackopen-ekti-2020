{"ast":null,"code":"var _jsxFileName = \"/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/state/state.tsx\";\nimport React, { createContext, useContext, useReducer } from \"react\";\nconst initialState = {\n  patients: {},\n  diagnosis: {}\n};\nexport const StateContext = createContext([initialState, () => initialState]);\nexport const StateProvider = ({\n  reducer,\n  children\n}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(StateContext.Provider, {\n    value: [state, dispatch],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport const useStateValue = () => useContext(StateContext);","map":{"version":3,"sources":["/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/state/state.tsx"],"names":["React","createContext","useContext","useReducer","initialState","patients","diagnosis","StateContext","StateProvider","reducer","children","state","dispatch","useStateValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AAUA,MAAMC,YAAmB,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,EADgB;AAE1BC,EAAAA,SAAS,EAAC;AAFgB,CAA5B;AAKA,OAAO,MAAMC,YAAY,GAAGN,aAAa,CAAkC,CACzEG,YADyE,EAEzE,MAAMA,YAFmE,CAAlC,CAAlC;AAUP,OAAO,MAAMI,aAA2C,GAAG,CAAC;AAC1DC,EAAAA,OAD0D;AAE1DC,EAAAA;AAF0D,CAAD,KAGjC;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACM,OAAD,EAAUL,YAAV,CAApC;AACA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,CAACO,KAAD,EAAQC,QAAR,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF;AAKD,CAVM;AAWP,OAAO,MAAMG,aAAa,GAAG,MAAMX,UAAU,CAACK,YAAD,CAAtC","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\nimport { Diagnosis, Patient } from \"../types\";\n\nimport { Action } from \"./reducer\";\n\nexport type State = {\n  patients: { [id: string]: Patient };\n  diagnosis: {[code: string]: Diagnosis}\n};\n\nconst initialState: State = {\n  patients: {},\n  diagnosis:{}\n};\n\nexport const StateContext = createContext<[State, React.Dispatch<Action>]>([\n  initialState,\n  () => initialState\n]);\n\ntype StateProviderProps = {\n  reducer: React.Reducer<State, Action>;\n  children: React.ReactElement;\n};\n\nexport const StateProvider: React.FC<StateProviderProps> = ({\n  reducer,\n  children\n}: StateProviderProps) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <StateContext.Provider value={[state, dispatch]}>\n      {children}\n    </StateContext.Provider>\n  );\n};\nexport const useStateValue = () => useContext(StateContext);\n"]},"metadata":{},"sourceType":"module"}