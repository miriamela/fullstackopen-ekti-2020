{"ast":null,"code":"var _jsxFileName = \"/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/AddPatientModal/FormField.tsx\";\nimport React from \"react\";\nimport { ErrorMessage, Field } from \"formik\";\nimport { Dropdown, Form } from \"semantic-ui-react\";\nexport const SelectField = ({\n  name,\n  label,\n  options\n}) => /*#__PURE__*/React.createElement(Form.Field, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}, label), /*#__PURE__*/React.createElement(Field, {\n  as: \"select\",\n  name: name,\n  className: \"ui dropdown\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }\n}, options.map(option => /*#__PURE__*/React.createElement(\"option\", {\n  key: option.value,\n  value: option.value,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }\n}, option.label || option.value))));\nexport const TextField = ({\n  field,\n  label,\n  placeholder\n}) => /*#__PURE__*/React.createElement(Form.Field, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }\n}, label), /*#__PURE__*/React.createElement(Field, Object.assign({\n  placeholder: placeholder\n}, field, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    color: 'red'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: field.name,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }\n})));\n/*\n  for exercises 9.24.-\n*/\n\nexport const NumberField = ({\n  field,\n  label,\n  min,\n  max\n}) => /*#__PURE__*/React.createElement(Form.Field, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }\n}, label), /*#__PURE__*/React.createElement(Field, Object.assign({}, field, {\n  type: \"number\",\n  min: min,\n  max: max,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }\n})), /*#__PURE__*/React.createElement(\"div\", {\n  style: {\n    color: 'red'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ErrorMessage, {\n  name: field.name,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }\n})));\nexport const DiagnosisSelection = ({\n  diagnoses,\n  setFieldValue,\n  setFieldTouched\n}) => {\n  const field = \"diagnosisCodes\";\n\n  const onChange = (_event, data) => {\n    setFieldTouched(field, true);\n    setFieldValue(field, data.value);\n  };\n\n  const stateOptions = diagnoses.map(diagnosis => ({\n    key: diagnosis.code,\n    text: `${diagnosis.name} (${diagnosis.code})`,\n    value: diagnosis.code\n  }));\n  return /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \"Diagnoses\"), /*#__PURE__*/React.createElement(Dropdown, {\n    fluid: true,\n    multiple: true,\n    search: true,\n    selection: true,\n    options: stateOptions,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: field,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/AddPatientModal/FormField.tsx"],"names":["React","ErrorMessage","Field","Dropdown","Form","SelectField","name","label","options","map","option","value","TextField","field","placeholder","color","NumberField","min","max","DiagnosisSelection","diagnoses","setFieldValue","setFieldTouched","onChange","_event","data","stateOptions","diagnosis","key","code","text"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { ErrorMessage, Field, FieldProps, FormikProps } from \"formik\";\nimport { Dropdown, DropdownProps, Form } from \"semantic-ui-react\";\nimport { Diagnosis, Gender } from \"../types\";\n\n// structure of a single option\nexport type GenderOption = {\n  value: Gender;\n  label: string;\n};\n\n// props for select field component\ntype SelectFieldProps = {\n  name: string;\n  label: string;\n  options: GenderOption[];\n};\n\nexport const SelectField: React.FC<SelectFieldProps> = ({\n  name,\n  label,\n  options\n}: SelectFieldProps) => (\n  <Form.Field>\n    <label>{label}</label>\n    <Field as=\"select\" name={name} className=\"ui dropdown\">\n      {options.map(option => (\n        <option key={option.value} value={option.value}>\n          {option.label || option.value}\n        </option>\n      ))}\n    </Field>\n  </Form.Field>\n);\n\ninterface TextProps extends FieldProps {\n  label: string;\n  placeholder: string;\n}\n\nexport const TextField: React.FC<TextProps> = ({\n  field,\n  label,\n  placeholder\n}) => (\n  <Form.Field>\n    <label>{label}</label>\n    <Field placeholder={placeholder} {...field} />\n    <div style={{ color:'red' }}>\n      <ErrorMessage name={field.name} />\n    </div>\n  </Form.Field>\n);\n\n/*\n  for exercises 9.24.-\n*/\ninterface NumberProps extends FieldProps {\n  label: string;\n  errorMessage?: string;\n  min: number;\n  max: number;\n}\n\nexport const NumberField: React.FC<NumberProps> = ({ field, label, min, max }) => (\n  <Form.Field>\n    <label>{label}</label>\n    <Field {...field} type='number' min={min} max={max} />\n\n    <div style={{ color:'red' }}>\n      <ErrorMessage name={field.name} />\n    </div>\n  </Form.Field>\n);\n\nexport const DiagnosisSelection = ({\n  diagnoses,\n  setFieldValue,\n  setFieldTouched\n}: {\n  diagnoses: Diagnosis[];\n  setFieldValue: FormikProps<{ diagnosisCodes: string[] }>[\"setFieldValue\"];\n  setFieldTouched: FormikProps<{ diagnosisCodes: string[] }>[\"setFieldTouched\"];\n}) => {\n  const field = \"diagnosisCodes\";\n  const onChange = (\n    _event: React.SyntheticEvent<HTMLElement, Event>,\n    data: DropdownProps\n  ) => {\n    setFieldTouched(field, true);\n    setFieldValue(field, data.value);\n  };\n\n  const stateOptions = diagnoses.map(diagnosis => ({\n    key: diagnosis.code,\n    text: `${diagnosis.name} (${diagnosis.code})`,\n    value: diagnosis.code\n  }));\n\n  return (\n    <Form.Field>\n      <label>Diagnoses</label>\n      <Dropdown\n        fluid\n        multiple\n        search\n        selection\n        options={stateOptions}\n        onChange={onChange}\n      />\n      <ErrorMessage name={field} />\n    </Form.Field>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}