{"ast":null,"code":"var _jsxFileName = \"/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/App.tsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport PatientPage from \"./PatientPage/index\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport { Button, Divider, Header, Container } from \"semantic-ui-react\";\nimport { apiBaseUrl } from \"./constants\";\nimport { useStateValue } from \"./state\";\nimport PatientListPage from \"./PatientListPage\";\nimport { importAllPatients, importAllDiagnosis } from \"./state/reducer\";\n\nconst App = () => {\n  const [, dispatch] = useStateValue();\n  React.useEffect(() => {\n    axios.get(`${apiBaseUrl}/ping`);\n\n    const fetchPatientList = async () => {\n      try {\n        const {\n          data: patientListFromApi\n        } = await axios.get(`${apiBaseUrl}/patients`);\n        dispatch(importAllPatients(patientListFromApi)); // { type: \"SET_PATIENT_LIST\", payload: patientListFromApi });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    fetchPatientList();\n  }, [dispatch]);\n  React.useEffect(() => {\n    const fetchDiagnosis = async () => {\n      try {\n        const {\n          data: diagnosesListFromApi\n        } = await axios.get(`${apiBaseUrl}/diagnoses`);\n        dispatch(importAllDiagnosis(diagnosesListFromApi));\n        console.log(diagnosesListFromApi);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchDiagnosis();\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Patientor\"), /*#__PURE__*/React.createElement(Button, {\n    as: Link,\n    to: \"/\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Home\"), /*#__PURE__*/React.createElement(Divider, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/patients/:id\",\n    render: () => /*#__PURE__*/React.createElement(PatientPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 53\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    render: () => /*#__PURE__*/React.createElement(PatientListPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 43\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/App.tsx"],"names":["React","axios","PatientPage","BrowserRouter","Router","Route","Link","Switch","Button","Divider","Header","Container","apiBaseUrl","useStateValue","PatientListPage","importAllPatients","importAllDiagnosis","App","dispatch","useEffect","get","fetchPatientList","data","patientListFromApi","e","console","error","fetchDiagnosis","diagnosesListFromApi","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,EAA+CC,MAA/C,QAA6D,kBAA7D;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,mBAAnD;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,aAAT,QAA8B,SAA9B;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,iBAAR,EAA2BC,kBAA3B,QAAoD,iBAApD;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAC1B,QAAM,GAAGC,QAAH,IAAeL,aAAa,EAAlC;AACAb,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpBlB,IAAAA,KAAK,CAACmB,GAAN,CAAiB,GAAER,UAAW,OAA9B;;AAEA,UAAMS,gBAAgB,GAAG,YAAY;AACnC,UAAI;AACF,cAAM;AAAEC,UAAAA,IAAI,EAAEC;AAAR,YAA+B,MAAMtB,KAAK,CAACmB,GAAN,CACxC,GAAER,UAAW,WAD2B,CAA3C;AAGAM,QAAAA,QAAQ,CAACH,iBAAiB,CAACQ,kBAAD,CAAlB,CAAR,CAJE,CAKA;AACH,OAND,CAME,OAAOC,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,KAVD;;AAWAH,IAAAA,gBAAgB;AACjB,GAfD,EAeG,CAACH,QAAD,CAfH;AAiBAlB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpB,UAAMQ,cAAc,GAAE,YAAU;AAC5B,UAAG;AACC,cAAM;AAACL,UAAAA,IAAI,EAAEM;AAAP,YAA+B,MAAM3B,KAAK,CAACmB,GAAN,CAAyB,GAAER,UAAW,YAAtC,CAA3C;AACAM,QAAAA,QAAQ,CAACF,kBAAkB,CAACY,oBAAD,CAAnB,CAAR;AACAH,QAAAA,OAAO,CAACI,GAAR,CAAYD,oBAAZ;AACH,OAJD,CAIC,OAAMJ,CAAN,EAAQ;AACPC,QAAAA,OAAO,CAACI,GAAR,CAAYL,CAAZ;AACD;AACJ,KARD;;AASAG,IAAAA,cAAc;AACjB,GAXC,EAWC,CAACT,QAAD,CAXD;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAEZ,IAAZ;AAAkB,IAAA,EAAE,EAAC,GAArB;AAAyB,IAAA,OAAO,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,oBAAC,OAAD;AAAS,IAAA,MAAM,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,eAAZ;AAA4B,IAAA,MAAM,EAAE,mBAAI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,MAAM,EAAE,mBAAM,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,CADF,CADF,CADF;AAiBD,CAjDD;;AAmDA,eAAeW,GAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport PatientPage from \"./PatientPage/index\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport { Button, Divider, Header, Container } from \"semantic-ui-react\";\nimport { apiBaseUrl } from \"./constants\";\nimport { useStateValue } from \"./state\";\nimport { Patient, Diagnoses } from \"./types\";\nimport PatientListPage from \"./PatientListPage\";\nimport {importAllPatients, importAllDiagnosis} from \"./state/reducer\";\n\nconst App: React.FC = () => {\n  const [, dispatch] = useStateValue();\n  React.useEffect(() => {\n    axios.get<void>(`${apiBaseUrl}/ping`);\n\n    const fetchPatientList = async () => {\n      try {\n        const { data: patientListFromApi } = await axios.get<Patient[]>(\n          `${apiBaseUrl}/patients`\n        );\n        dispatch(importAllPatients(patientListFromApi))\n          // { type: \"SET_PATIENT_LIST\", payload: patientListFromApi });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    fetchPatientList();\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    const fetchDiagnosis =async ()=>{\n        try{\n            const {data: diagnosesListFromApi} = await axios.get<Diagnoses[]>( `${apiBaseUrl}/diagnoses`)\n            dispatch(importAllDiagnosis(diagnosesListFromApi))\n            console.log(diagnosesListFromApi)\n        }catch(e){\n          console.log(e)\n        }\n    }\n    fetchDiagnosis();\n}, [dispatch])\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Container>\n          <Header as=\"h1\">Patientor</Header>\n          <Button as={Link} to=\"/\" primary>\n            Home\n          </Button>\n          <Divider hidden />\n          <Switch>\n            <Route path=\"/patients/:id\" render={()=><PatientPage/>}/>\n            <Route path=\"/\" render={() => <PatientListPage />} />\n          </Switch>\n        </Container>\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}