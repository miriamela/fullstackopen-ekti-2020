{"ast":null,"code":"var _jsxFileName = \"/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/AddPatientModal/AddPatientForm.tsx\";\nimport React from \"react\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport { Field, Formik, Form } from \"formik\";\nimport { TextField, SelectField } from \"./FormField\";\nimport { Gender } from \"../types\";\n/*\n * use type Patient, but omit id and entries,\n * because those are irrelevant for new patient object.\n */\n\nconst genderOptions = [{\n  value: Gender.Male,\n  label: \"Male\"\n}, {\n  value: Gender.Female,\n  label: \"Female\"\n}, {\n  value: Gender.Other,\n  label: \"Other\"\n}];\nexport const AddPatientForm = ({\n  onSubmit,\n  onCancel\n}) => {\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: \"\",\n      ssn: \"\",\n      dateOfBirth: \"\",\n      occupation: \"\",\n      gender: Gender.Other\n    },\n    onSubmit: onSubmit,\n    validate: values => {\n      const requiredError = \"Field is required\";\n      const errors = {};\n\n      if (!values.name) {\n        errors.name = requiredError;\n      }\n\n      if (!values.ssn) {\n        errors.ssn = requiredError;\n      }\n\n      if (!values.dateOfBirth) {\n        errors.dateOfBirth = requiredError;\n      }\n\n      if (!values.occupation) {\n        errors.occupation = requiredError;\n      }\n\n      return errors;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, ({\n    isValid,\n    dirty\n  }) => {\n    return /*#__PURE__*/React.createElement(Form, {\n      className: \"form ui\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      label: \"Name\",\n      placeholder: \"Name\",\n      name: \"name\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"Social Security Number\",\n      placeholder: \"SSN\",\n      name: \"ssn\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"Date Of Birth\",\n      placeholder: \"YYYY-MM-DD\",\n      name: \"dateOfBirth\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      label: \"Occupation\",\n      placeholder: \"Occupation\",\n      name: \"occupation\",\n      component: TextField,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(SelectField, {\n      label: \"Gender\",\n      name: \"gender\",\n      options: genderOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      floated: \"left\",\n      width: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      onClick: onCancel,\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Cancel\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      floated: \"right\",\n      width: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      floated: \"right\",\n      color: \"green\",\n      disabled: !dirty || !isValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Add\"))));\n  });\n};\nexport default AddPatientForm;","map":{"version":3,"sources":["/Users/America/Documents/GitHub/fullstackopen-ekti-2020/part9/patientor/frontend/src/AddPatientModal/AddPatientForm.tsx"],"names":["React","Grid","Button","Field","Formik","Form","TextField","SelectField","Gender","genderOptions","value","Male","label","Female","Other","AddPatientForm","onSubmit","onCancel","name","ssn","dateOfBirth","occupation","gender","values","requiredError","errors","isValid","dirty"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport { Field, Formik, Form } from \"formik\";\n\nimport { TextField, SelectField, GenderOption } from \"./FormField\";\nimport { Gender, Patient } from \"../types\";\n\n/*\n * use type Patient, but omit id and entries,\n * because those are irrelevant for new patient object.\n */\nexport type PatientFormValues = Omit<Patient, \"id\" | \"entries\">;\n\ninterface Props {\n  onSubmit: (values: PatientFormValues) => void;\n  onCancel: () => void;\n}\n\nconst genderOptions: GenderOption[] = [\n  { value: Gender.Male, label: \"Male\" },\n  { value: Gender.Female, label: \"Female\" },\n  { value: Gender.Other, label: \"Other\" }\n];\n\nexport const AddPatientForm: React.FC<Props> = ({ onSubmit, onCancel }) => {\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        ssn: \"\",\n        dateOfBirth: \"\",\n        occupation: \"\",\n        gender: Gender.Other\n      }}\n      onSubmit={onSubmit}\n      validate={values => {\n        const requiredError = \"Field is required\";\n        const errors: { [field: string]: string } = {};\n        if (!values.name) {\n          errors.name = requiredError;\n        }\n        if (!values.ssn) {\n          errors.ssn = requiredError;\n        }\n        if (!values.dateOfBirth) {\n          errors.dateOfBirth = requiredError;\n        }\n        if (!values.occupation) {\n          errors.occupation = requiredError;\n        }\n        return errors;\n      }}\n    >\n      {({ isValid, dirty }) => {\n        return (\n          <Form className=\"form ui\">\n            <Field\n              label=\"Name\"\n              placeholder=\"Name\"\n              name=\"name\"\n              component={TextField}\n            />\n            <Field\n              label=\"Social Security Number\"\n              placeholder=\"SSN\"\n              name=\"ssn\"\n              component={TextField}\n            />\n            <Field\n              label=\"Date Of Birth\"\n              placeholder=\"YYYY-MM-DD\"\n              name=\"dateOfBirth\"\n              component={TextField}\n            />\n            <Field\n              label=\"Occupation\"\n              placeholder=\"Occupation\"\n              name=\"occupation\"\n              component={TextField}\n            />\n            <SelectField\n              label=\"Gender\"\n              name=\"gender\"\n              options={genderOptions}\n            />\n            <Grid>\n              <Grid.Column floated=\"left\" width={5}>\n                <Button type=\"button\" onClick={onCancel} color=\"red\">\n                  Cancel\n                </Button>\n              </Grid.Column>\n              <Grid.Column floated=\"right\" width={5}>\n                <Button\n                  type=\"submit\"\n                  floated=\"right\"\n                  color=\"green\"\n                  disabled={!dirty || !isValid}\n                >\n                  Add\n                </Button>\n              </Grid.Column>\n            </Grid>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default AddPatientForm;\n"]},"metadata":{},"sourceType":"module"}